DirLength[7] <- 324
DirLength[8] <- 203
for(i in 1:length(margin_pEXTL)){
ChLength[i] <- rgeos::gLength(margin_pEXTL[i,1])
Sin[i] <- ChLength[i]/DirLength[i]
}
Sin <- vector()
DirLength[1] <- 206
DirLength[2] <- 271
DirLength[3] <- 197
DirLength[4] <- 166
DirLength[5] <- 394
DirLength[6] <- 368
DirLength[7] <- 324
DirLength[8] <- 203
for(i in 1:length(margin_pEXTL)){
ChLength[i] <- rgeos::gLength(margin_pEXTL[i,1])
Sin[i] <- ChLength[i]/DirLength[i]
}
Sin
mask(SinSlope,margin_pEXTL[i,1])
plot(mask(SinSlope,margin_pEXTL[i,1]))
Slo <- vector()
DirLength[1] <- 206
DirLength[2] <- 271
DirLength[3] <- 197
DirLength[4] <- 166
DirLength[5] <- 394
DirLength[6] <- 368
DirLength[7] <- 324
DirLength[8] <- 203
for(i in 1:length(margin_pEXTL)){
ChLength[i] <- rgeos::gLength(margin_pEXTL[i,1])
Sin[i] <- ChLength[i]/DirLength[i]
sloM <- mask(SinSlope,margin_pEXTL[i,1])
Slo[i] <- cellStats(sloM,'mean')
}
plot(sin,Slo)
plot(Sin,Slo)
plot(Slo,Sin)
DEM_temp <- raster(pathDEM_PleiadesRR&'/'&fnDEM_1)
#projection(DEM_temp) <- projec_utm
DEM_masked <- crop(DEM_temp,margin_pEXTL)
SinSlope <- terrain(DEM_masked,opt="slope", unit="degrees", neighbors=8)
# Sinuosity
ChLength <- vector()
DirLength <- vector()
Sin <- vector()
Slo <- vector()
DirLength[1] <- 206
DirLength[2] <- 271
DirLength[3] <- 197
DirLength[4] <- 166
DirLength[5] <- 394
DirLength[6] <- 368
DirLength[7] <- 324
DirLength[8] <- 203
DirLength[9] <- 85
DirLength[10] <- 63
DirLength[11] <- 166
for(i in 1:length(margin_pEXTL)){
ChLength[i] <- rgeos::gLength(margin_pEXTL[i,1])
Sin[i] <- ChLength[i]/DirLength[i]
sloM <- mask(SinSlope,margin_pEXTL[i,1])
Slo[i] <- cellStats(sloM,'mean')
}
plot(Slo,Sin)
# read Margin line
ogrInfo(path_Sin,fnMarginLine)
margin_pEXTL<-readOGR(dsn=path_Sin,layer=fnMarginLine)
#######################
# Read DEM Data
#######################
DEM_temp <- raster(pathDEM_PleiadesRR&'/'&fnDEM_1)
#projection(DEM_temp) <- projec_utm
DEM_masked <- crop(DEM_temp,margin_pEXTL)
SinSlope <- terrain(DEM_masked,opt="slope", unit="degrees", neighbors=8)
# Sinuosity
ChLength <- vector()
DirLength <- vector()
Sin <- vector()
Slo <- vector()
DirLength[1] <- 206
DirLength[2] <- 271
DirLength[3] <- 197
DirLength[4] <- 166
DirLength[5] <- 394
DirLength[6] <- 368
DirLength[7] <- 324
DirLength[8] <- 203
DirLength[9] <- 85
DirLength[10] <- 63
DirLength[11] <- 166
for(i in 1:length(margin_pEXTL)){
ChLength[i] <- rgeos::gLength(margin_pEXTL[i,1])
Sin[i] <- ChLength[i]/DirLength[i]
sloM <- mask(SinSlope,margin_pEXTL[i,1])
Slo[i] <- cellStats(sloM,'mean')
}
plot(Slo,Sin)
################################################################################
# Validate steep ice margin with high resolution DEMs from field sites
#
# ArctciDEM_Margin_Extractor.R
#
# ReadMe:
#
# https://github.com/fidelsteiner/tGISM
#
# Input:
# Validation on two sites (Red Rock, Mittivakat) by comparing the Arctic DEM against available Pleiades imagery
#
#
# Created:          2021/10/15
# Latest Revision:  2023/01/23
#
# Jakob F Steiner | jakob@x-hydrolab.org | x-hydrolab.org
################################################################################
# clear entire workspace (excl. packages)
rm(list = ls())
gc()
# define &-sign for pasting string-elements
'&' <- function(...) UseMethod('&')
'&.default' <- .Primitive('&')
'&.character' <- function(...) paste(...,sep='')
# packages (if not installed yet: install.packages('examplePackage')
library(rgdal)
library(rgeos)
library(maptools)
library(raster)
library(ggplot2)
library(dplyr)
library(ggridges)
library(RColorBrewer)
library(hydroGOF)
##################
# Multiple subsites for analysis of the margin
##################
GlacierName <- 'RedRock'
fnDEM_1 <- 'PGO_2017-08-15_RedRockCliff_DEM_2m.tif'
fnDEM_2 <- 'c0_reg_dem_ProjectRaster1.tif'
fnMarginOutline <- 'RedRock_ManualBuffer_200m'
fnMarginLine <- 'RedRock_ManualLine'
##################
# Paths
##################
path_RR <-'C:\\Work\\Research\\tGISM\\MarginValidation\\ArcticDEMValidation\\RedRock'
path_MV <-'C:\\Work\\Research\\tGISM\\MarginValidation\\ArcticDEMValidation\\Mittivakat'
path_figs<-'C:\\Work\\Research\\tGISM\\Figures'
pathDEM_PleiadesRR<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\RedRock_Pleiades\\Pleiades\\DEM\\2017-08-15_RedRockCliff\\PGO\\2017-08-15_RedRockCliff'
pathDEM_PleiadesMV_1<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-08_Mittivakkat\\PGO\\2018-08-08_Mittivakkat'
pathDEM_PleiadesMV_2<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat'
pathDEM_PleiadesMV_3<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat'
pathDEM_Arctic<-'G:\\ArcticDEM'
projec<-'+proj=utm +datum=WGS84'
projec_utm<-'+proj=utm +zone=19N +datum=WGS84'
projec_27N<-'+proj=utm +zone=27N +datum=WGS84'
fnMarginOutline_MV <- 'Mittivakat_ManualBuffer_200m'
fnMarginLine_MV <- 'Mittivakat_ManualLine'
# read Margin line
ogrInfo(path_MV,fnMarginLine)
# read Margin line
ogrInfo(path_MV,fnMarginLine_MV)
margin_pEXTL<-readOGR(dsn=path_MV,layer=fnMarginLine_MV)
#projection(margin_pEXT)<-projec
marginValLength <- rgeos::gLength(margin_pEXTL)
marginValLength
# read Margin Buffer
ogrInfo(path_MV,fnMarginOutline_MV)
margin_pEXT<-readOGR(dsn=path_RR,layer=fnMarginOutline_MV)
fnMarginOutline_MV
# read Margin Buffer
ogrInfo(path_MV,fnMarginOutline_MV)
margin_pEXT<-readOGR(dsn=path_MV,layer=fnMarginOutline_MV)
#projection(margin_pEXT)<-projec
margin_pEXT<-SpatialPolygons(margin_pEXT@polygons,proj4string=margin_pEXT@proj4string)
fnDEM_MV_2 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat\\PGO_2018-08-09_Mittivakkat_DEM_2m.tif'
fnDEM_MV_3 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat\\PGO_2018-08-15_Mittivakkat_DEM_2m.tif'
fnDEM_MV_1 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-08_Mittivakkat\\PGO\\2018-08-08_Mittivakkat\\PGO_2018-08-08_Mittivakkat_DEM_2m.tif'
fnDEM_MV_2 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat\\PGO_2018-08-09_Mittivakkat_DEM_2m.tif'
fnDEM_MV_3 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat\\PGO_2018-08-15_Mittivakkat_DEM_2m.tif'
fnDEM_MV_1 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-08_Mittivakkat\\PGO\\2018-08-08_Mittivakkat\\PGO_2018-08-08_Mittivakkat_DEM_2m.tif'
fnDEM_MV_2 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat\\PGO_2018-08-09_Mittivakkat_DEM_2m.tif'
fnDEM_MV_3 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat\\PGO_2018-08-15_Mittivakkat_DEM_2m.tif'
fnDEM_MV_Arctic1 <- 'G:\\ArcticDEM\\14_44_1_1_2m_v3.0\\14_44_1_1_2m_v3.0_reg_dem.tif'
fnDEM_MV_Arctic2 <- 'G:\\ArcticDEM\\14_44_1_2_2m_v3.0\\14_44_1_2_2m_v3.0_reg_dem.tif'
plot(margin_pEXT)
DEM_masked <- mask(crop(DEM_temp_1,margin_pEXT),margin_pEXT)
DEM_temp_1 <- raster(fnDEM_MV_1)
DEM_temp_2 <- raster(fnDEM_MV_2)
DEM_temp_3 <- raster(fnDEM_MV_3)
DEM_masked <- mask(crop(DEM_temp_1,margin_pEXT),margin_pEXT)
DEM_masked
plot(DEM_masked)
DEM_temp <- merge(DEM_temp_1,DEM_temp_2)
plot(DEM_temp)
DEM_temp <- merge(DEM_temp_1,DEM_temp_2,DEM_temp_2)
DEM_temp_1 <- raster(fnDEM_MV_1)
DEM_temp_2 <- raster(fnDEM_MV_2)
DEM_temp_3 <- raster(fnDEM_MV_3)
DEM_temp <- merge(DEM_temp_1,DEM_temp_2,DEM_temp_3)
#projection(DEM_temp) <- projec_utm
DEM_Arctic1 <- raster(fnDEM_MV_Arctic1)
DEM_Arctic2 <- raster(fnDEM_MV_Arctic2)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2)
DEM_masked <- mask(crop(DEM_temp,margin_pEXT),margin_pEXT)
MV_slope <- terrain(DEM_masked, opt="slope", unit="degrees", neighbors=8)
MV_slope
plot(MV_slope)
DEMArctic_masked <- mask(crop(DEM_Arctic,margin_pEXT),margin_pEXT)
margin_pEXT
DEM_Arctic
projection(DEM_Arctic) <- projec_utm
op<-projectRaster(DEM_Arctic2,crs=projec_utm)
op<-projectRaster(DEM_Arctic2,crs=projection(DEM_temp))
op
fnDEM_MV_Arctic1
DEM_Arctic1 <- raster(fnDEM_MV_Arctic1)
DEM_Arctic2 <- raster(fnDEM_MV_Arctic2)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2)
DEM_Arctic
plot(DEM_Arctic)
plot(DEM_temp)
DEMArctic_masked <- mask(crop(DEM_Arctic,margin_pEXT),margin_pEXT)
################################################################################
# Validate steep ice margin with high resolution DEMs from field sites
#
# ArctciDEM_Margin_Extractor.R
#
# ReadMe:
#
# https://github.com/fidelsteiner/tGISM
#
# Input:
# Validation on two sites (Red Rock, Mittivakat) by comparing the Arctic DEM against available Pleiades imagery
#
#
# Created:          2021/10/15
# Latest Revision:  2023/01/23
#
# Jakob F Steiner | jakob@x-hydrolab.org | x-hydrolab.org
################################################################################
# clear entire workspace (excl. packages)
rm(list = ls())
gc()
# define &-sign for pasting string-elements
'&' <- function(...) UseMethod('&')
'&.default' <- .Primitive('&')
'&.character' <- function(...) paste(...,sep='')
# packages (if not installed yet: install.packages('examplePackage')
library(rgdal)
library(rgeos)
library(maptools)
library(raster)
library(ggplot2)
library(dplyr)
library(ggridges)
library(RColorBrewer)
library(hydroGOF)
##################
# Multiple subsites for analysis of the margin
##################
GlacierName <- 'RedRock'
fnDEM_1 <- 'PGO_2017-08-15_RedRockCliff_DEM_2m.tif'
fnDEM_2 <- 'c0_reg_dem_ProjectRaster1.tif'
fnDEM_MV_1 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-08_Mittivakkat\\PGO\\2018-08-08_Mittivakkat\\PGO_2018-08-08_Mittivakkat_DEM_2m.tif'
fnDEM_MV_2 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat\\PGO_2018-08-09_Mittivakkat_DEM_2m.tif'
fnDEM_MV_3 <- 'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat\\PGO_2018-08-15_Mittivakkat_DEM_2m.tif'
fnDEM_MV_Arctic1 <- 'G:\\ArcticDEM\\14_44_1_1_2m_v3.0\\14_44_1_1_2m_v3.0_reg_dem.tif'
fnDEM_MV_Arctic2 <- 'G:\\ArcticDEM\\14_44_1_2_2m_v3.0\\14_44_1_2_2m_v3.0_reg_dem.tif'
fnMarginOutline_RR <- 'RedRock_ManualBuffer_200m'
fnMarginLine_RR <- 'RedRock_ManualLine'
fnMarginOutline_MV <- 'Mittivakat_ManualBuffer_200m'
fnMarginLine_MV <- 'Mittivakat_ManualLine'
##################
# Paths
##################
path_RR <-'C:\\Work\\Research\\tGISM\\MarginValidation\\ArcticDEMValidation\\RedRock'
path_MV <-'C:\\Work\\Research\\tGISM\\MarginValidation\\ArcticDEMValidation\\Mittivakat'
path_figs<-'C:\\Work\\Research\\tGISM\\Figures'
pathDEM_PleiadesRR<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\RedRock_Pleiades\\Pleiades\\DEM\\2017-08-15_RedRockCliff\\PGO\\2017-08-15_RedRockCliff'
pathDEM_PleiadesMV_1<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-08_Mittivakkat\\PGO\\2018-08-08_Mittivakkat'
pathDEM_PleiadesMV_2<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-09_Mittivakkat\\PGO\\2018-08-09_Mittivakkat'
pathDEM_PleiadesMV_3<-'G:\\GeospatialData\\DEMData\\ValidationDEMs\\Mittivakat\\transfer_20608_files_611c06f9\\2018-08-15_Mittivakkat\\PGO\\2018-08-15_Mittivakkat'
pathDEM_Arctic<-'G:\\ArcticDEM'
projec<-'+proj=utm +datum=WGS84'
projec_utm<-'+proj=utm +zone=19N +datum=WGS84'
projec_27N<-'+proj=utm +zone=27N +datum=WGS84'
# read Margin line
ogrInfo(path_MV,fnMarginLine_MV)
margin_pEXTL<-readOGR(dsn=path_MV,layer=fnMarginLine_MV)
#projection(margin_pEXT)<-projec
marginValLength <- rgeos::gLength(margin_pEXTL)
# read Margin Buffer
ogrInfo(path_MV,fnMarginOutline_MV)
margin_pEXT<-readOGR(dsn=path_MV,layer=fnMarginOutline_MV)
#projection(margin_pEXT)<-projec
margin_pEXT<-SpatialPolygons(margin_pEXT@polygons,proj4string=margin_pEXT@proj4string)
margin_pEXT
DEM_temp_1 <- raster(fnDEM_MV_1)
DEM_temp_1
DEM_Arctic1 <- raster(fnDEM_MV_Arctic1)
DEM_Arctic1
plot(DEM_Arctic1)
fnDEM_MV_Arctic1 <- 'G:\\ArcticDEM\\14_44_1_1_2m_v3.0\\14_44_1_1_2m_v3.0_reg_dem_reproject.tif'
fnDEM_MV_Arctic2 <- 'G:\\ArcticDEM\\14_44_1_2_2m_v3.0\\14_44_1_2_2m_v3.0_reg_dem_reproject.tif'
# read Margin line
ogrInfo(path_MV,fnMarginLine_MV)
margin_pEXTL<-readOGR(dsn=path_MV,layer=fnMarginLine_MV)
#projection(margin_pEXT)<-projec
marginValLength <- rgeos::gLength(margin_pEXTL)
# read Margin Buffer
ogrInfo(path_MV,fnMarginOutline_MV)
margin_pEXT<-readOGR(dsn=path_MV,layer=fnMarginOutline_MV)
#projection(margin_pEXT)<-projec
margin_pEXT<-SpatialPolygons(margin_pEXT@polygons,proj4string=margin_pEXT@proj4string)
#######################
# Read DEM Data
#######################
DEM_temp_1 <- raster(fnDEM_MV_1)
DEM_temp_2 <- raster(fnDEM_MV_2)
DEM_temp_3 <- raster(fnDEM_MV_3)
DEM_temp <- merge(DEM_temp_1,DEM_temp_2,DEM_temp_3)
fnDEM_MV_Arctic1
DEM_Arctic1 <- raster(fnDEM_MV_Arctic1)
DEM_Arctic1
plot(DEM_Arctic1)
DEM_Arctic2 <- raster(fnDEM_MV_Arctic2)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2)
DEM_Arctic2
DEM_Arctic2
DEM_Arctic1
DEM_Arctic2
DEM_Arctic1
res( DEM_Arctic1)
2/res( DEM_Arctic1)[1]
op <- aggregate(DEM_Arctic1,fact=2/res( DEM_Arctic1)[1])
DEM_Arctic1
op <- aggregate(DEM_Arctic1,fact=2/res(DEM_Arctic1)[1])
2/res(DEM_Arctic1)[1]
kFact <-2/res(DEM_Arctic1)[1]
op <- aggregate(DEM_Arctic1,fact=kFact
)
rp <- raster(ncol=27509, nrow=27509)
rp <- setExtent(rp,extent(DEM_Arctic1))
rp
rp <- raster(ncol=27509, nrow=27509)
rp <- setExtent(rp,extent(DEM_Arctic1)-c(0.1,0.2,0,0))
rp
rp <- raster(ncol=27509, nrow=27509)
rp <- setExtent(rp,extent(DEM_Arctic1)-c(1.1,1.2,0,0))
rp
rp <- setExtent(rp,extent(DEM_Arctic1)-c(1.1,1.2,0,0),res=2)
rp <- raster(ncol=27510, nrow=27510)
rp
rp <- setExtent(rp,extent(DEM_Arctic1)-c(1.1,1.2,0,0))
rp
rp <- setExtent(rp,extent(DEM_Arctic1)-c(4.1,7.2,0,0))
rp
rp <- raster(ncol=27509, nrow=27509)
rp <- setExtent(rp,extent(DEM_Arctic1)-c(4.1,-1.8,1,-2))
rp
rp <- raster(ncol=27509, nrow=27509)
rp
fnDEM_MV_Arctic1 <- 'G:\\ArcticDEM\\14_44_1_1_2m_v3.0\\14_44_1_1_2m_v3.0_reg_dem_reproject2m.tif'
fnDEM_MV_Arctic2 <- 'G:\\ArcticDEM\\14_44_1_2_2m_v3.0\\14_44_1_2_2m_v3.0_reg_dem_reproject2m.tif'
DEM_Arctic1 <- raster(fnDEM_MV_Arctic1)
DEM_Arctic2 <- raster(fnDEM_MV_Arctic2)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2)
DEM_Arctic2
DEM_Arctic1
plot(DEM_Arctic2)
plot(DEM_Arctic1)
DEM_Arctic1
DEM_Arctic2
DEM_Arctic1
DEM_Arctic2
xlist <- list(DEM_Arctic1,DEM_Arctic2)
m <- do.call(merge, xlist)
template<- projectRaster(from = DEM_Arctic1, to= DEM_Arctic2, alignOnly=TRUE)
r2_aligned<- projectRaster(from = DEM_Arctic1, to= template)
mosaic(DEM_Arctic1,DEM_Arctic2)
DEM_Arctic1
DEM_Arctic2
lapply(DEM_Arctic1, origin)
origin(DEM_Arctic2)
origin(DEM_Arctic1)
origin(DEM_temp_1)
origin(DEM_temp_2)
origin(DEM_temp_3)
op<-resample(DEM_Arctic2,DEM_Arctic1)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2, tolerance=0.15)
DEM_Arctic <- merge(DEM_Arctic1,DEM_Arctic2, tolerance=0.55)
DEM_Arctic
plot(DEM_Arctic)
origin(DEM_Arctic1)-origin(DEM_Arctic2)
DEM_masked <- mask(crop(DEM_temp,margin_pEXT),margin_pEXT)
MV_slope <- terrain(DEM_masked, opt="slope", unit="degrees", neighbors=8)
DEMArctic_masked <- mask(crop(DEM_Arctic,margin_pEXT),margin_pEXT)
MV_slopeArctic <- terrain(DEMArctic_masked, opt="slope", unit="degrees", neighbors=8)
set.seed(1234)
wdata_IceCap = data.frame(
DEM = factor(rep(c("ArcticDEM", "Pleiades"), each=length(which(!is.na(MV_slope[]))))),
slope = c(MV_slopeArctic[which(!is.na(MV_slope[]))], MV_slope[which(!is.na(MV_slope[]))])
)
head(wdata_IceCap, 4)
par(mar=c(4,2,5,1),cex.lab=1.2,cex.axis=1.5)
ggplot(wdata_IceCap, aes(x = slope, y = DEM)) +
geom_density_ridges(aes(fill = DEM)) +
scale_fill_manual(values = c("#E7B800","#00AFBB")) +
geom_vline(aes(xintercept = grp.mean, color = DEM),
data = mu, linetype = "dashed") +
scale_x_continuous(name=expression('Slope [°]'), limits=c(0, 80)) +
theme(axis.text.x = element_text(size=14, angle=90),
axis.text.y = element_text(size=14, angle=0)) +
theme(axis.title.y =element_blank(),
axis.text.y=element_blank()) +
theme(legend.text=element_text(size=rel(1)))
mu <- wdata_IceCap %>%
group_by(DEM) %>%
summarise(grp.mean = median(slope,na.rm=T))
par(mar=c(4,2,5,1),cex.lab=1.2,cex.axis=1.5)
ggplot(wdata_IceCap, aes(x = slope, y = DEM)) +
geom_density_ridges(aes(fill = DEM)) +
scale_fill_manual(values = c("#E7B800","#00AFBB")) +
geom_vline(aes(xintercept = grp.mean, color = DEM),
data = mu, linetype = "dashed") +
scale_x_continuous(name=expression('Slope [°]'), limits=c(0, 80)) +
theme(axis.text.x = element_text(size=14, angle=90),
axis.text.y = element_text(size=14, angle=0)) +
theme(axis.title.y =element_blank(),
axis.text.y=element_blank()) +
theme(legend.text=element_text(size=rel(1)))
theme_bw()
ecdfArctic <- ecdf(RR_slopeArctic[])
ecdfArctic <- ecdf(MV_slopeArctic[])
ecdfPleiades <- ecdf(MV_slope[])
par(mar=c(5,5,1,1),cex.lab=1.5,cex.axis=1.5)
layout(matrix(c(1), nrow = 1, ncol = 1, byrow = TRUE))
plot(sort(MV_slopeArctic[]),ecdfArctic(sort(MV_slopeArctic[])),type='l',xlim=c(0, 90),lwd=2, main='', panel.first=grid(equilogs=T),ylab = 'probability of exceedance [-]',xlab = 'slope [°]',do.points=F,verticals = T,col.01line = NULL,ylim=c(0,1))
points(sort(MV_slope[]),ecdfPleiades(sort(MV_slope[])),type='l',col='red',lwd=2,col.01line = NULL)
legend('bottomright',bty='n',col=c('black','red'),lty = 1,lwd = 2,legend=c('ArcticDEM', 'Pléiades'),cex=1.5)
png(file=path_figs&'\\ECDF_Mittivakat.png', res = 160,width=1200,height=900)
par(mar=c(5,5,1,1),cex.lab=1.5,cex.axis=1.5)
layout(matrix(c(1), nrow = 1, ncol = 1, byrow = TRUE))
plot(sort(MV_slopeArctic[]),ecdfArctic(sort(MV_slopeArctic[])),type='l',xlim=c(0, 90),lwd=2, main='', panel.first=grid(equilogs=T),ylab = 'probability of exceedance [-]',xlab = 'slope [°]',do.points=F,verticals = T,col.01line = NULL,ylim=c(0,1))
points(sort(MV_slope[]),ecdfPleiades(sort(MV_slope[])),type='l',col='red',lwd=2,col.01line = NULL)
legend('bottomright',bty='n',col=c('black','red'),lty = 1,lwd = 2,legend=c('ArcticDEM', 'Pléiades'),cex=1.5)
dev.off()
# error statistics between slope rasters
MV_slope_res <- resample(MV_slope,MV_slopeArctic)
medPleiades <- median(RR_slope[],na.rm=T)
medPleiades <- median(MV_slope[],na.rm=T)
medArctic <- median(MV_slopeArctic[],na.rm=T)
medDev <- median(MV_slope_res[] - MV_slopeArctic[],na.rm=T)
biasDev <- (sum(MV_slope_res[] - MV_slopeArctic[],na.rm=t))/length(which(!is.na(MV_slope_res[] - MV_slopeArctic[])))
NSEDev <- NSE(MV_slope_res[],MV_slopeArctic[],na.rm=T,fun=NULL)
corDEV <- cor(MV_slope_res[which(!is.na(MV_slope_res[] - MV_slopeArctic[]))],MV_slopeArctic[which(!is.na(MV_slope_res[] - MV_slopeArctic[]))],method = 'spearman')
medPleiades
medArctic
biasDev
NSEDev
corDEV
################################################################################
# Spatial Analysis of the Ice Margin over Greenland / Global Code
#
#
# ReadMe:
# https://github.com/fidelsteiner/tGISM
#
# Created:          2018/02/05
# Latest Revision:  2024/02/16
#
# Jakob F Steiner | jakob@x-hydrolab.org | x-hydrolab.org
################################################################################
# clear entire workspace (excl. packages)
rm(list = ls())
gc()
# define &-sign for pasting string-elements
'&' <- function(...) UseMethod('&')
'&.default' <- .Primitive('&')
'&.character' <- function(...) paste(...,sep='')
# packages (if not installed yet: install.packages('examplePackage')
#install.packages('pacman')
library(pacman)
p_load(spatialEco,ncdf4,gstat,rgdal,rgeos,maptools,raster,foreach,lubridate,compare,colorRamps,data.table,circular,parallel,snowfall,truncnorm,rlecuyer,forecast,rasterVis,R.utils,zoo,rlist,ggplot2)
library(sf)
library(sp)
##################
# paths
##################
path_outlines<-'E:\\Research\\OtherResearch\\Greenland\\PROMICE_database\\Glacier Outline'  # PROMICE
fnMarginOutline<-'PROMICdiss'
path_outlines2 <- 'E:\\Research\\OtherResearch\\Greenland\\Outlines\\'
path_cci <- 'E:\\Research\\OtherResearch\\Greenland\\cci_data\\outlines'
fnMarginOutline_cci <- 'cci_go_greenland_icesheet_2000'
path_outlines_RGI<-'E:\\Research\\OtherResearch\\Greenland\\Outlines\\RGI\\05_rgi60_GreenlandPeriphery'                          # CCI
fnMarginOutline_RGI<-'05_rgi60_GreenlandPeriphery'
pathDEM_topo <- 'E:\\Research\\OtherResearch\\Greenland\\Bathymetry'
path_figs <- 'E:\\Research\\OtherResearch\\Greenland\\Figures'
path_mankoff <- 'E:\\Research\\OtherResearch\\Greenland\\PROMICE_database\\MankoffData\\sector_D.csv'
path_mouginot <- 'E:\\Research\\OtherResearch\\Greenland\\Mouginot\\'
path_noel <- 'E:\\Research\\OtherResearch\\Greenland\\NoelData'
path_sectorMargins <- 'E:\\Research\\OtherResearch\\Greenland\\Code\\SectorMargins'
# Bedmachine data
bedmachineRAW <- 'E:\\Research\\OtherResearch\\Greenland\\Bedmachine\\5000000451838\\160281892\\BedMachineGreenland-2017-09-20.nc'
# basin data
GLbasins <- 'E:\\Research\\OtherResearch\\Greenland\\Mouginot\\drainagebasins\\GRE_Basins_IMBIE2_v1.3.shp'
# sector data
GLsectors <- 'E:\\Research\\OtherResearch\\Greenland\\Mouginot\\drainagebasins\\MouginotRignot\\doi_10.7280_D1WT11__v1\\Greenland_Basins_PS_v1.4.2.shp'
#read PROMICE margin  including all ice caps (1980s)
ogrInfo(path_outlines,fnMarginOutline)
